{"version":3,"sources":["my-uppercase.pipe.spec.ts"],"names":[],"mappings":";AAAA,kCAAgC,qBAAqB,CAAC,CAAA;AAEtD,QAAQ,CAAC,iBAAiB,EAAE;IAC1B,IAAI,IAAqB,CAAC;IAE1B,UAAU,CAAC;QACT,IAAI,GAAG,IAAI,mCAAe,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE;QAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QACtC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC/B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"my-uppercase.pipe.spec.js","sourcesContent":["import { MyUppercasePipe } from './my-uppercase.pipe';\n\ndescribe('MyUppercasePipe', () => {\n  let pipe: MyUppercasePipe;\n\n  beforeEach(() => {\n    pipe = new MyUppercasePipe();\n  });\n\n  it('transforms \"abc\" to \"ABC\"', () => {\n    expect(pipe.transform('abc')).toEqual('ABC');\n  });\n\n  it('transforms \"abc def\" to \"ABC DEF\"', () => {\n    expect(pipe.transform('abc def')).toEqual('ABC DEF');\n  });\n\n  it('leaves \"ABC DEF\" unchanged', () => {\n    expect(pipe.transform('ABC DEF')).toEqual('ABC DEF');\n  });\n\n});\n"],"sourceRoot":"/source/"}